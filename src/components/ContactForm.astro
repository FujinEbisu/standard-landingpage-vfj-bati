---
import { site } from '../config/site';
const WEB3_ENDPOINT = 'https://api.web3forms.com/submit'; // Could be moved to env later
---
<div class="contact" id="contact">
      <div class="content">
  <h2>Contact</h2>
  <p class="intro">Expliquez votre besoin en quelques lignes et nous revenons vers vous rapidement.</p>
  <form id="contact-form" action={WEB3_ENDPOINT} method="POST" class="form" netlify-honeypot="bot-field" onsubmit="handleSubmit(event)">
    <input type="hidden" name="access_key" value="REPLACE_WITH_KEY" />
    <input type="text" name="bot-field" style="display:none" tabindex="-1" autocomplete="off" />
    <div class="field">
      <label for="name">Nom</label>
      <input id="name" name="name" type="text" required minlength="2" autocomplete="name" />
    </div>
    <div class="field">
      <label for="email">Email</label>
      <input id="email" name="email" type="email" required autocomplete="email" />
    </div>
    <div class="field">
      <label for="message">Message</label>
      <textarea id="message" name="message" rows="5" required minlength="10"></textarea>
    </div>
    <div class="field-checkbox">
      <input type="checkbox" id="consent" name="consent" required />
      <label for="consent">
        J'accepte que mes données soient utilisées pour être recontacté. En savoir plus sur notre <a href="/privacy">politique de confidentialité</a>.
      </label>
    </div>
    <div class="actions">
      <button type="submit" class="button" data-loading="false">
        <span class="label">Envoyer</span>
        <span class="loader" aria-hidden="true"></span>
      </button>
    </div>
    <p id="form-status" role="status" aria-live="polite" class="status"></p>
  </form>
  </div>
  </div>
</div>
<script>
  async function handleSubmit(e: Event){
    const form = e.target;
    e.preventDefault();
    const btn = form.querySelector('button');
    const status = form.querySelector('#form-status');
    btn.dataset.loading = 'true';
    status.textContent = 'Envoi en cours...';
    const formData = new FormData(form);
    try {
      const res = await fetch(form.action, { method: 'POST', body: formData });
      const data = await res.json();
      if(data.success){
        status.textContent = 'Message envoyé. Merci !';
        form.reset();
      } else {
        status.textContent = 'Une erreur est survenue. Réessayez.';
      }
    } catch(err){
      status.textContent = 'Impossible de soumettre. Vérifiez votre connexion.';
    } finally {
      btn.dataset.loading = 'false';
    }
  }
</script>
<style>
  .intro { max-width: 60ch; }
  form { display:grid; gap: var(--space-m); max-width: 640px; }
  .field { display:flex; flex-direction:column; gap: .35rem; }
  label { font-size: .8rem; font-weight:600; letter-spacing:.5px; text-transform:uppercase; }
  input, textarea { font: inherit; padding:.75rem .85rem; border:1px solid var(--color-border); border-radius: var(--radius-sm); background:#fff; resize: vertical; }
  input:focus, textarea:focus { outline:2px solid var(--color-accent); outline-offset:1px; }
  button { position:relative; }
  .loader { width:1em; height:1em; border:2px solid rgba(255,255,255,.5); border-top-color:#fff; border-radius:50%; animation:spin 1s linear infinite; display:none; }
  button[data-loading="true"] .loader { display:inline-block; }
  button[data-loading="true"] .label { opacity:0.4; }
  .status { font-size:.85rem; margin:0; min-height:1.2em; color: var(--color-text-muted); }
  @keyframes spin { to { transform:rotate(360deg); } }
</style>
